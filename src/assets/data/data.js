const exprienceListData = [
    {
        title: '四川精准服务系统',
        company: '德生科技股份有限公司',
        project_time: '2019.02-2019.03',
        project_desc: '精准服务系统是公司从产品提供商向产品+运营服务商转变的标志性产品，通过德生精准服务系统的呼叫、短信等功能，支持人社公众服务业务，提高公众满意度。',
        project_module: '主线功能有智能客服+人工坐席服务、待遇发放短信通知。实现精准社保卡信息客服服务。',
        project_responsibilities: '负责阿里云短信接口的开发，单条、批量发送、处理短信上行回执；在接口的基础上实现待遇发放短信的提醒功能。',
        project_skill_desc: '通过线程池异步方式批量发送短信下行通知，提升系统的响应和吞吐量。',
        desc: '查看详情',
        tag: ["springboot", "JPA", "Oracle", 'Redis', '线程池'],
        details: '详情'
    },
    {
        title: '陕西省人社一体化项目-补换卡',
        company: '德生科技股份有限公司',
        project_time: '2019.04-2019.07',
        project_desc: '为了陕西各个银行网点方便社保卡的补换卡办理、记录发卡数据、制卡数据大屏的展示。还包含后台管理部分：用户信息管理、区域管理、机构管理、设备管理、预制卡管理。',
        project_module: '桌面制卡机制卡、pc端对发卡记录的管理、自助终端制卡业务、数据大屏统计。',
        project_responsibilities: '负责整个 pc 端后台开发（设备认证、卡信息验证、制卡、数据回盘）以及后台管理：用户信息管理、区域管理、机构管理、设备管理、预制卡管理，后台整体 框架 SSM+webservice，接口的调用采用DES对称加密算法，对请求参数的加解密。一体化项目采用多个项目模块，前后端分离， 请求统一经过 Nginx转发到后端，每次请求的头部通过JWT的token的形式验证接口的合法性；系统采用 AOP 动态切换多个数据源。对于中间临时数据我用Redis进行缓存。',
        project_skill_desc: '该项目采用分布式负载均衡的部署方式。提升系统的性能和可用性。',
        desc: '查看详情',
        tag: ["SSM", "webservice", 'DES加解密', 'Nginx负载均衡', 'jwt-token'],
        details: '详情'
    },
    {
        title: '运营城市服务分布图',
        company: '德生科技股份有限公司',
        project_time: '2019.08-2019.08',
        project_desc: '以地图数据大屏的方式展示公司的业务运营范围和运营的业务。外网地址：http://114.67.49.72:21480/map.html',
        project_module: '统计各个省、市所运营的业务，例如：自助查询服务,社保卡数据采集发行服务，社保卡数据采集发行，自助补换卡服务,缴费服务,电商扶贫服务。',
        project_responsibilities: '通过财务给来的Excel数据，后台编写文件上传接口，然后统计地图的业务数据。',
        project_skill_desc: '该项目用到文件上传和统计类型的SQL编写。',
        project_img: true,
        img_url: 'http://images.zhifa.tech/%E5%9F%8E%E5%B8%82%E5%88%86%E5%B8%83%E5%9B%BE.png',
        desc: '查看详情',
        tag: ["springboot", "jenkins", 'docker', 'Echart'],
        details: '详情'
    },
    {
        title: '德生城市中台项目-人力资源产品',
        company: '德生科技股份有限公司',
        project_time: '2019.08-2020.02',
        project_desc: '安徽芜湖人力资源的产品需求，结合社保卡业务对蓝领人员进行精准就业，管理后台部分为人力资源运营平台，人才库主要对求职人才进行面试的记录、通知等。企业用工主要维护招聘的企业信息，结合企业信息匹配人才。小程序端（云社聘），可以发布一些职位和招聘公告、企业注册找人才。',
        project_module: 'pc端：也就是：人力资源运营平台，包括人才库（我的人才库、备用人才库、收藏的人才）、企业用工（企业-人才的匹配）、人才找工作、公司匹配人才。小程序端（云社聘）：招聘会信息、惠民政策、惠企政策、求职者信息登记、人才找职位、企业匹配，推荐人才、培训信息。',
        project_responsibilities: '编写搜索微服务公共组件。我采用的是elasticsearch搜索引擎作为基础搜索服务组件，ik中文分词器作为插件。目前完成关于政府类的政策搜索、根据标题或者内容作为筛选条件，政策类型（个人、企业）作为过滤条件；C端用户搜索职位，搜索职位或者公司查询对应的职位信息，然后根据多条件（地点范围、职位类型、薪资范围等）过滤查询结果；帮你推荐功能，根据用户填写的个性化字段，把这些作为筛选条件到es上面匹配信息。由于是公共层服务为了解耦其他服务，本搜索服务都对外提供全量同步、增量同步、删除接口。只要其他服务以restful风格的请求调用即可。',
        project_skill_desc: '基于springcloud的微服务架构，注册中心使用阿里的nacos（集成注册中心、分布式配置中心）；服务网关使用spring的gateway（使用基于netty异步io）。',
        desc: '查看详情    小程序已上线，搜索《云社聘》',
        tag: ["springcloud", "分布式架构", "jenkins持续集成", "高可用mysql", 'seata分布式事务', 'elasticsearch'],
        details: '详情'
    },
    {
        title: '读写分离，高性能、高可用mysql集群',
        company: '德生科技股份有限公司',
        project_time: '2019.08-2020.02',
        project_responsibilities: '搭建读写分离+主备热切+mycat数据库中间件的高可用mysql。考虑到中台未来的用户量大，并发要求高。我搭建了双主双从架构模式的mysql数据库，双主互为主从。底层通过监听binlog日志文件的形式实现数据的同步，为了解决同步时延带来的查询问题，在服务层添加事务（mysql事务的默认特性：可重复读），让请求打到主库上面。利用mycat数据库中间件屏蔽数据库集群的信息，所有请求统一由中间件转发处理。',
        desc: '查看详情 ',
        tag: ["高性能", "高可用", "主备热切mysql", "数据库中间件"],
        details: '详情'
    },
    {
        title: 'seata实现分布式事务强一致性',
        company: '德生科技股份有限公司',
        project_time: '2019.08-2020.02',
        project_responsibilities: '由于系统采用springcloud分布式架构微服务，各个服务相互独立，数据库也相应独立分离。基于业务需求，需要在两个数据库之间实现数据操作的强一致性（原子性），所以我基于Alibaba提供的组件搭建了seata分布式事务强一致性组件，多个微服务的数据源注册到统一的seata服务（事务协调者），由调用方（事务发起者统一发起全局事务）事务在多个微服务（参与者）中传播，最后采取二段提交协议的方式达到事务强一致性。',
        desc: '查看详情',
        tag: ["springcloud分布式架构", "多数据源", "事务强一致性"],
        details: '详情'
    },
    {
        title: 'ELK日志收集',
        company: '德生科技股份有限公司',
        project_time: '2019.08-2020.02',
        project_responsibilities: '搭建日志收集、分析框架ELK，在每个微服务的日志配置文件中配置好logstash信息，通过它收集每个微服务的日志信息，我设置按照日期分包，服务名分文件的形式，一份写到elasticsearch上面，一份保存在服务器本地做日志归档；然后用kibana监控每个微服务输出到es上面的信息。通过kibana组件实时监控各个微服务的运行状态。',
        desc: '查看详情',
        tag: ["elasticsearch", "logstash", "kibana"],
        details: '详情'
    },
    {
        title: '广州市排水设施巡检系统',
        company: '奥格智能科技有限公司',
        project_time: '2020.03-2020.05',
        project_desc: '该系统面向的用户为广州市各区的排水公司，大模块包括：巡检巡查（排水设施巡检、巡检日志、巡检轨迹、养护计划审核）、数据上报（排水口管理、内涝管理、水质管理、管网运行图、城镇污水处理）、专栏管理、排水户管理（门派查询、导出、问题处理）',
        project_module: '排水监测站和水务局提出污水处理厂污泥处理上报和统计，要求维管单位在对污水处理厂对污泥处理情况上报，系统提供报表导出功能进行数据导出，此需求涉及PC端功能和报表开发，报表均提供时间戳功能，可以统计时间段的数据。',
        project_responsibilities: '合并排水设施巡检的第三方（广州市排水公司、黄埔科学城排水公司）数据，并展示到巡检动态模块；编写、处理城镇污水处理模块的数据，导入各区的污水、污泥信息，并统计报表信息;对广州市各区的排水公司污水、污泥数据的增删改查。广州市污泥干化情况统计、广州市干化污泥焚烧处置情况统计。',
        project_skill_desc: '',
        project_img: true,
        img_url: 'http://images.zhifa.tech/%E5%B9%BF%E5%B7%9E%E6%8E%92%E6%B0%B4%E5%B7%A1%E6%A3%80pc%281%29.png',
        desc: '查看详情',
        tag: ["ssh", "jdbcTemplate", "oracle 11g", "系统数据维护", "数据统计报表"],
        details: '详情'
    },
    {
        title: '清远市城市水系监测及智慧排水信息化管理平台',
        company: '奥格智能科技有限公司',
        project_time: '2020.06-2020.09',
        project_desc: '该项目是清远市城市水系监测及智慧排水信息化管理一体化平台，包含众多模块：黑臭水体监控系统（水质整治信息、基础信息管理、河湖名录、监测信息、水环境容量计算、水质预测）；' +
            '厂网河一体化业务系统（排水设施基本管理、设施问题上报处理、在线监测数据接入、运行报告上传）。' +
            '项目已上线：http://awater.qyzhsl.com:8090/opus-front-sso/authentication/require',
        project_module: '问题上报及处置管理：1、对巡查和养护过程中所发现的每一类排水设施存在的各种问题进行上报、任务派发、过程记录、处理结果记录，对处理结果进行复核与评价；采用工作流方式驱动，分不同角色办理，可自由流转，可任务代办、转办，办理过程可加注意见与建议。' +
            '2、问题统计分析，具体包括按区统计问题数量、按人统计问题数量，还包括导出统计表等功能；' +
            '3、按行政区划、责任单位、上报时间周期等分类统计与查看问题上报和处理情况列表，查看上报问题在地图上分布情况。',
        project_responsibilities: '采用h5移动端页面的方式实现问题上报功能，项目亮点就是大文件分片上传和断点续传。' +
            '核心思路：前端对文件进行分片，并且发送文件的唯一标识（文件名、类型、大小或者其他属性进行md5摘要计算可得）、分片索引（第几个分片）、分片总数、文件名称（方便合并后的文件名称）；' +
            '前端用递归方式将分片传输到后台，后台判断分片索引等于分片总数就开始合并，通过流输出追加的方式合并文件。' +
            '断点续传：网络波动情况下，文件传输不完整，所以前端在文件上传的时候根据文件的唯一标识查询后台，然后再确定要上传哪些分片。',
        project_skill_desc: '该项目采用分模块服务的方式：每个模块独立一个服务，然后都集成同一个地址的单点登录（SSO），所有请求都统一由NGINX来转发，所以对外只暴露一个地址和端口。而且根据服务访问情况，同一个服务部署多份实现服务的负载均衡。',
        project_img: true,
        img_url: 'http://images.zhifa.tech/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200904140205.png',
        desc: '查看详情',
        tag: ["springboot", "大文件分片上传", "极速秒传和断点续传", "vue element UI"],
        details: '详情'
    }
];
export default exprienceListData;